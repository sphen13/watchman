#!/bin/bash

# PLUGIN: Swap
# AUTHOR: Stephen Boyle @sphen13
# DATE:   2017-02-26

# set defaults
pluginName="_check_swap"
warningThreshold=50
alertThreshold=62

settings_plist="/Library/MonitoringClient/PluginSupport/"$pluginName"_settings.plist"
clientSettings="/Library/MonitoringClient/ClientSettings.plist"
PlistBuddy="/usr/libexec/PlistBuddy"

if [ ! -f $settings_plist ]; then
	# populate plist with defaults
	defaults write "$settings_plist" warningThreshold $warningThreshold
	defaults write "$settings_plist" alertThreshold $alertThreshold
	defaults write "$settings_plist" PrefPaneVisibility -bool true
	defaults write "$settings_plist" Initially_Disabled -bool true
	chmod 644 "$settings_plist"
	
	isDisabled=`"$PlistBuddy" -c "Print :PluginsDisabled" "$clientSettings" | grep "$pluginName"`
	if [ -z "$isDisabled" ]; then
		"$PlistBuddy" -c "Add :PluginsDisabled: string $pluginName.plugin" "$clientSettings"
	fi
	exit 25
else
	# plist exists - lets check for each value
	isset=`defaults read "$settings_plist" warningThreshold 2>/dev/null`
	if [ -z "$isset" ]; then
		defaults write "$settings_plist" warningThreshold $warningThreshold
		chmod 644 "$settings_plist"
	fi
	isset=`defaults read "$settings_plist" alertThreshold 2>/dev/null`
	if [ -z "$isset" ]; then
		defaults write "$settings_plist" alertThreshold $alertThreshold		
		chmod 644 "$settings_plist"
	fi
fi

# set our variables
warningThreshold=`defaults read "$settings_plist" warningThreshold`
alertThreshold=`defaults read "$settings_plist" alertThreshold`
totalMemory=`sysctl hw.memsize | awk '{print $2}'`
let totalMemory=$totalMemory/1048576
let warningThresholdMB=$totalMemory*$warningThreshold/100
let alertThresholdMB=$totalMemory*$alertThreshold/100

swapUsed=`sysctl vm.swapusage | awk '{print substr($7, 0, length($7)-1)}' | cut -d'.' -f1`

if [ "$swapUsed" -ge "$alertThresholdMB" ]; then
	echo -e "Swap memory usage too high.\n\nTotal Memory: $totalMemory MB\nWarning Threshold: $warningThreshold%\nAlert Threshold: $alertThreshold%\nSwap Used: $swapUsed MB"
	exit 2
elif [ "$swapUsed" -ge "$warningThresholdMB" ]; then
	echo -e "Swap memory usage high.\n\nTotal Memory: $totalMemory MB\nWarning Threshold: $warningThreshold%\nAlert Threshold: $alertThreshold%\nSwap Used: $swapUsed MB"
	exit 20
else
	echo -e "Swap memory usage OK.\n\nTotal Memory: $totalMemory MB\nWarning Threshold: $warningThreshold%\nAlert Threshold: $alertThreshold%\nSwap Used: $swapUsed MB"
	exit 0
fi