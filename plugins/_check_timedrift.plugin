#!/bin/bash

# PLUGIN: TimeDrift
# AUTHOR: Stephen Boyle @sphen13
# DATE:   2017-02-23

# idea: try to fix it!
# launchctl unload /System/Library/LaunchDaemons/org.ntp.ntpd.plist 
# launchctl load /System/Library/LaunchDaemons/org.ntp.ntpd.plist

# set defaults
pluginName="_check_timedrift"
ntpServer="time.apple.com"
secondsOfAcceptableDrift=120

settings_plist="/Library/MonitoringClient/PluginSupport/"$pluginName"_settings.plist"
clientSettings="/Library/MonitoringClient/ClientSettings.plist"
PlistBuddy="/usr/libexec/PlistBuddy"

# read settings and create if needed. disable by default / unless we are a server...
if [ ! -f $settings_plist ]; then
	# populate plist with defaults
	defaults write "$settings_plist" ntpServer -string "$ntpServer"
	defaults write "$settings_plist" secondsOfAcceptableDrift $secondsOfAcceptableDrift
	defaults write "$settings_plist" PrefPaneVisibility -bool true
	defaults write "$settings_plist" Initially_Disabled -bool true
	chmod 644 "$settings_plist"
	
	#server check
	serverCheck=`ps -ax | grep -e "com.apple.serverd" -e "servermgrd" -e "fmserver" -e "4D.app" -e "LightSpeed Server" -e "MPServerDaemon" | grep -v grep`
	if [ ! -z "$serverCheck" ]; then
		defaults write "$settings_plist" Initially_Disabled -bool false
		chmod 644 "$settings_plist"
	else
		isDisabled=`"$PlistBuddy" -c "Print :PluginsDisabled" "$clientSettings" | grep "$pluginName"`
		if [ -z "$isDisabled" ]; then
			"$PlistBuddy" -c "Add :PluginsDisabled: string $pluginName.plugin" "$clientSettings"
		fi	
	fi
	exit 25
else
	# plist exists - lets check for each value
	isset=`defaults read "$settings_plist" ntpServer 2>/dev/null`
	if [ -z "$isset" ]; then
		defaults write "$settings_plist" ntpServer -string "$ntpServer"
		chmod 644 "$settings_plist"
	fi
	isset=`defaults read "$settings_plist" secondsOfAcceptableDrift 2>/dev/null`
	if [ -z "$isset" ]; then
		defaults write "$settings_plist" secondsOfAcceptableDrift $secondsOfAcceptableDrift		
		chmod 644 "$settings_plist"
	fi
fi

ntpServer=`defaults read "$settings_plist" ntpServer`
secondsOfAcceptableDrift=`defaults read "$settings_plist" secondsOfAcceptableDrift`

# actually do the checks now...
if [ -f /usr/bin/ntpq ]; then
	# are we online?
	weAreOnline=`ping -c 1 -W 900 8.8.8.8 > /dev/null && echo '1'`
	if [ ! -z "$weAreOnline" ]; then
		# check for drift
		output=`ntpdate -q "$ntpServer" 2>&1 | tail -1`
		
		# check if ntp server unreachable
		if [[ $output == *"suitable"* ]]; then
			echo -e "NTP server unreachable.  Please check NTP server specified or check DNS/firewall.\n\nntpServer: $ntpServer\nsecondsOfAcceptableDrift: $secondsOfAcceptableDrift"
			
			# honestly not sure why this would happen - unless there were odd networking things going on.  we tested that a ping to google worked... lets just return a notice and not notify.
			exit 20
		elif [[ $output == *"no servers"* ]]; then
			echo -e "NTP server does not exist.  Please check NTP server specified or check DNS.\n\nntpServer: $ntpServer\nsecondsOfAcceptableDrift: $secondsOfAcceptableDrift"
			exit 2
		else
			drift=`echo "$output" | sed -n -e 's/^.*offset [-]*\(.*\) .*$/\1/p'`
			driftAcceptable=`echo "$secondsOfAcceptableDrift > $drift" | bc -l`
		
			if [ "$driftAcceptable" == "0" ]; then							
				echo -e "NTP time drift greater than $secondsOfAcceptableDrift seconds.  The clock is off by $drift seconds.\n\nntpServer: $ntpServer\nsecondsOfAcceptableDrift: $secondsOfAcceptableDrift"

				driftedBefore=`defaults read "$settings_plist" ntpReloaded 2>/dev/null`
				if [ "$driftedBefore" == "1" ]; then
					# wrut-wroe -- we have already drifted in the previous run and havent fixed it - lets send a legit alert/ticket...
					echo -e "\nWe have already attempted to reload org.ntp.ntpd."
					exit 2
				else
					# ok so we found an excessive time drift. lets reload the daemon - wait a bit and recheck...
					launchctl unload /System/Library/LaunchDaemons/org.ntp.ntpd.plist
					launchctl load /System/Library/LaunchDaemons/org.ntp.ntpd.plist
					sleep 10
					driftNew=`ntpdate -q "$ntpServer" 2>&1 | tail -1 | sed -n -e 's/^.*offset [-]*\(.*\) .*$/\1/p'`
					echo -e "\nRELOADING org.ntp.ntpd....\n\nNew time drift: $driftNew"
				
					# since we triggered a reload we want to know about it - lets set a preference key
					defaults write "$settings_plist" ntpReloaded -bool true		
					chmod 644 "$settings_plist"
				
					# exit with code which will generate an alert/ticket regardless of anything else...
					exit 200
				fi

			elif [ "$driftAcceptable" == "1" ]; then
				echo -e "NTP time drift OK: $drift seconds.\n\nntpServer: $ntpServer\nsecondsOfAcceptableDrift: $secondsOfAcceptableDrift"
				defaults write "$settings_plist" ntpReloaded -bool false		
				chmod 644 "$settings_plist"
				exit 0
			else
				echo -e "Oops - this should not happen...  [$drift]\n\nntpServer: $ntpServer\nsecondsOfAcceptableDrift: $secondsOfAcceptableDrift"
				exit 2
			fi
		fi
	else
		echo "Internet is not reachable - Skipping drift check..."
		exit 20
	fi
fi

echo "ntpq binary not found"
exit 2
